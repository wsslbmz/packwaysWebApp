{"version":3,"file":"ng-auto-complete.js.map","sources":["ng://ng-auto-complete/lib/classes/AutocompleteItem.ts","ng://ng-auto-complete/lib/classes/AutocompleteGroup.ts","ng://ng-auto-complete/lib/utils/utils.ts","ng://ng-auto-complete/lib/dropdown/ng-dropdown.directive.ts","ng://ng-auto-complete/lib/completer/completer.component.ts","ng://ng-auto-complete/lib/ng-auto-complete.component.ts","ng://ng-auto-complete/lib/pipes/highlight.ts","ng://ng-auto-complete/lib/pipes/key-value.ts","ng://ng-auto-complete/lib/pipes/pipes.module.ts","ng://ng-auto-complete/lib/ng-auto-complete.module.ts"],"sourcesContent":["export interface StrippedAutocompleteGroup {\n    group: { key: string },\n    item: AutocompleteItem\n}\n\nexport class AutocompleteItem {\n\n    title: string;\n    id?: string | number;\n    children: any[];\n    original: any;\n\n    constructor(title: string, id: string | number, original: any) {\n        this.title = title;\n        this.id = id;\n        this.original = original;\n    }\n}\n\n/**\n *\n */\nexport function SearchableAutoCompleteItems(items: { id?: string|number; [value: string]: any }[], titleKey: string, childrenKey: string | null = null): {[value: string]: AutocompleteItem} {\n    return items.reduce(function (r, i) {\n        const t = SearchableAutoCompleteString(i[titleKey], i.id);\n\n        if(typeof r[t] === 'undefined') {\n            r[t] = TransformToAutocompleteItem(i, titleKey, childrenKey)\n        }\n\n        return r;\n    }, {})\n}\n\n/**\n *\n */\nexport function SearchableAutoCompleteString(key: string, id: string|number) {\n    return `${key.replace(/ /g,\"_\")}_id_${String(id)}`;\n}\n\n/**\n *\n */\nexport function ComparableAutoCompleteString(str: string) {\n    return str.replace(/_/g,\" \");\n}\n\n/**\n * object must have an ID\n */\n\nexport function TransformToAutocompleteItem(object: { id?: string | number; [value: string]: any }, titleKey: string, childrenKey: string | null = null) {\n    const item = new AutocompleteItem(object[titleKey], object.id, object);\n\n    /**\n     * if there are children, add these.\n     */\n    if (childrenKey !== null) item.children = object[childrenKey];\n\n    return item\n}\n","import { AutocompleteItem, SearchableAutoCompleteItems } from './AutocompleteItem';\nimport { TemplateRef } from '@angular/core';\n\nexport class AutocompleteGroup {\n    initialValue: { [value: string]: AutocompleteItem };\n\n    key: string;\n    keys: { titleKey: string, childrenKey: string | null };\n    value: { [value: string]: AutocompleteItem };\n    remove: string[];\n    placeholder: string;\n    parent: string;\n    completion: boolean;\n    searchLength: number;\n    async: (str: string) => Promise<{ id: string | number; [value: string]: any }[]> = null;\n\n    // Templates\n    noResults: TemplateRef<any>;\n    dropdownValue: TemplateRef<any>;\n    placeholderValue: TemplateRef<any>;\n\n    private removals: string[] = [];\n    private _copy: { [value: string]: AutocompleteItem };\n\n    constructor() {\n    }\n\n    /**\n     *\n     */\n    SetNewValue(value: { id: string | number; [value: string]: any }[], titleKey: string) {\n        const values = SearchableAutoCompleteItems(value, titleKey);\n        this.SetCopy(values);\n\n        /**\n         *\n         */\n        this.value = this.FilterRemovals(this.removals, values);\n    }\n\n    /**\n     *\n     */\n    Removables(ids: string[]) {\n        this.removals = ids;\n\n        /**\n         *\n         */\n        this.value = this.FilterRemovals(this.removals, this._copy);\n    }\n\n    /**\n     *\n     */\n    InitialValue() {\n        this.value = this.FilterRemovals(this.removals, this.initialValue);\n\n        /**\n         *\n         */\n        this.SetCopy(this.initialValue);\n    }\n\n    /**\n     *\n     */\n    SetCopy(values: { [value: string]: AutocompleteItem }) {\n        this._copy = Object.assign([], values);\n    }\n\n    /**\n     *\n     */\n    SetValues(value: { id?: string | number; [value: string]: any }[]) {\n        this.value = SearchableAutoCompleteItems(value, this.keys.titleKey, this.keys.childrenKey);\n\n        /**\n         *\n         */\n        this.initialValue = Object.assign({}, this.value);\n        this.SetCopy(Object.assign({}, this.value));\n    }\n\n    /**\n     *\n     */\n    FilterRemovals(removals: any[], value: { [value: string]: AutocompleteItem }): { [value: string]: AutocompleteItem } {\n        let filtered = Object.assign({}, value);\n\n        let key, keys = [];\n        for (key in filtered) {\n            if (filtered.hasOwnProperty(key)) {\n                removals.forEach((id) => {\n                    // Comparable string and ID\n                    let f = `_id_${String(id)}`;\n                    let c = key.substring(key.indexOf(f), key.length);\n\n                    if (f === c) {\n                        keys.push(key);\n                    }\n                })\n            }\n        }\n\n        keys.forEach((k) => {\n            delete filtered[k];\n        });\n\n        return filtered;\n    }\n}\n\n/**\n *\n */\nexport function CreateNewAutocompleteGroup<T>(placeholder: string, key: string, value: { id?: string | number; [value: string]: any }[], keys: { titleKey: string, childrenKey: string | null }, parent: string = '', completion: boolean = true, searchLength: number = 2): AutocompleteGroup {\n    const group = new AutocompleteGroup();\n\n    group.key = key;\n    group.keys = keys;\n    group.placeholder = placeholder;\n    group.parent = parent;\n    group.completion = completion;\n    group.searchLength = searchLength;\n\n    /**\n     * Initial value needed, if we empty search box or want to clear it, it needs to be reset.\n     * Setting copy, used if user wants to remove values (by id.). This _ list gets filtered.\n     */\n    group.SetValues(value);\n\n    return group;\n}\n","import { AutocompleteItem } from '../classes/AutocompleteItem';\n\nconst UsedCodeList = {\n    ArrowDown:      40,\n    ArrowUp:        38,\n    Enter:          13,\n    Escape:         27,\n    Tab:            9,\n    MetaLeft:       91,\n    AltLeft:        18,\n    ControlLeft:    17,\n    ShiftLeft:      16,\n    ArrowLeft:      37,\n    ArrowRight:     39,\n    MetaRight:      93,\n    AltRight:       18\n};\n\nexport interface GroupNoResult {\n    group: {key: string};\n    query: string;\n}\n\n/**\n *\n */\nexport function ReturnStringArrayByID(array: { id: string | number, [value: string]: any }[]) {\n    return array.reduce((result, item) => {\n        result.push(item.id.toString());\n\n        return result\n    }, [])\n}\n\n/**\n *\n */\nexport function FilterRemovals(removals: string[], list: AutocompleteItem[]) {\n    return list.filter((item) => {\n        return removals.indexOf(item.id.toString()) <= -1;\n    });\n}\n\n/**\n *\n */\nexport function IsMobileOrTablet() {\n    let isMobile = false;\n    if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0, 4))) {\n        isMobile = true;\n    }\n\n    return isMobile\n}\n\nexport function NotUsedKey(code: string) {\n    return typeof UsedCodeList[code] === 'undefined';\n}\n","import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges\n} from \"@angular/core\";\nimport {IsMobileOrTablet} from \"../utils/utils\";\n\n@Directive({\n    selector: '[ngDropdown]'\n})\nexport class NgDropdownDirective implements OnChanges, OnInit, OnDestroy {\n    @Input() public list: any[] = [];\n    @Input() public active: any = null;\n\n    @Input() public input: Element = null;\n    @Input() public element: Element = null;\n\n    @Input() public key: string = '';\n    @Input() public completion: boolean = true;\n\n    @Output() public hover: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public selected: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public closed: EventEmitter<any> = new EventEmitter<any>();\n\n    _open: boolean = false;\n    _list: { active: boolean, [value: string]: any }[] = [];\n    _class: string = '';\n    wheelHandler: any;\n\n    constructor(public _eref: ElementRef) {\n    }\n\n    /**\n     *\n     */\n    ngOnInit() {\n        this._class = `dr-item-${this.key}-`;\n\n        if (this.RefExists()) {\n            this.input.addEventListener('keydown', (event: KeyboardEvent) => {\n                this.keyDown(event);\n            });\n        }\n\n        if(!this.completion) {\n            document.addEventListener('keydown', (event: KeyboardEvent) => {\n                if(this._open) {\n                    this.keyDown(event);\n                }\n            });\n        }\n\n        if(!IsMobileOrTablet()) {\n            this._eref.nativeElement.addEventListener('mouseover', (event: MouseEvent) => {\n                this.OnMouseOver(event);\n            });\n\n        }\n\n        /**\n         *\n         */\n        this.PrepareList();\n    }\n\n    /**\n     *\n     */\n    ngOnChanges(changes: SimpleChanges) {\n        if (typeof changes['active'] !== 'undefined' && !changes['active'].firstChange) {\n            this.PrepareList();\n        }\n        if (typeof changes['list'] !== 'undefined') {\n            this.list = changes['list'].currentValue;\n\n            /**\n             *\n             */\n            this.PrepareList();\n        }\n    }\n\n    /**\n     *\n     */\n    keyDown(event: KeyboardEvent) {\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n\n        /**\n         *\n         */\n        switch (event.code) {\n            case 'ArrowDown':\n                this.Open();\n\n                /**\n                 *\n                 */\n                this.SetActive(this.FindActive() + 1);\n                this.DropdownFocusAreaDown();\n\n                event.preventDefault();\n                break;\n            case 'ArrowUp':\n                this.Open();\n\n                /**\n                 *\n                 */\n                this.SetActive(this.FindActive() - 1);\n                this.DropdownFocusAreaUp();\n\n                event.preventDefault();\n                break;\n            case 'Enter':\n                this.EmitSelected();\n                this.Close(null, true);\n\n                event.preventDefault();\n                break;\n            case 'Escape':\n                this.Close(null, true);\n\n                event.preventDefault();\n                break;\n            case 'Tab':\n                if(!event.shiftKey) {\n                    this.EmitSelected();\n                }\n\n                this.Close(null, true);\n                break;\n            default:\n                return;\n        }\n    }\n\n    /**\n     *\n     */\n    OnMouseOver(event: MouseEvent) {\n        // Mouse didn't actually move, so no logic needed.\n        if(event.movementX == 0 && event.movementY == 0) {\n            return\n        }\n\n        /**\n         *\n         */\n        const el: any = event.target || event.srcElement;\n        if (el.id.length > 0 && el.id.includes(this._class)) {\n            this.SetActive(Number(el.id.slice(this._class.length, el.id.length)));\n        }\n    }\n\n    /**\n     *\n     */\n    EmitSelected() {\n        if(this.FindActive() > -1) {\n            this.selected.emit(this._list[this.FindActive()].key);\n        }\n    }\n\n    /**\n     *\n     */\n    DropdownFocusAreaDown() {\n        let scroll = this._eref.nativeElement.offsetHeight + this._eref.nativeElement.scrollTop;\n\n        /**\n         *\n         */\n        if((this.GetElement(this.FindActive()).offsetTop + this.GetElement(this.FindActive()).offsetHeight) > scroll) {\n            this._eref.nativeElement.scrollTop = this.GetElement(this.FindActive()).offsetTop - (this._eref.nativeElement.offsetHeight - this.GetElement(this.FindActive()).offsetHeight)\n        }\n    }\n\n    /**\n     *\n     */\n    DropdownFocusAreaUp() {\n        let scroll = this._eref.nativeElement.scrollTop;\n\n        /**\n         *\n         */\n        if(this.GetElement(this.FindActive()).offsetTop < scroll && scroll > 0) {\n            this._eref.nativeElement.scrollTop = this.GetElement(this.FindActive()).offsetTop;\n        }\n    }\n\n    // =======================================================================//\n    // ! Bindings                                                             //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    @HostBinding('class.open')\n    get opened() {\n        return this._open;\n    }\n\n\n    // =======================================================================//\n    // ! Listeners                                                            //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    @HostListener('document:click', ['$event'])\n    Close(event, force: boolean = false) {\n        if(!this._open) {\n            return;\n        }\n\n        const close = () => {\n            this._open = false;\n\n            /**\n             * Emit NULL so listening components know what to do.\n             */\n            this.ClearActive();\n            this.hover.emit(null);\n            this.closed.emit();\n        };\n\n        if (force) {\n            close();\n            return;\n        }\n\n        if ((this._open && (!this.element.contains(event.target)))) {\n            close();\n        }\n    }\n\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    Open() {\n        setTimeout(() => {\n            if (!this._open && !this._eref.nativeElement.classList.contains('is-initial-empty')) {\n                this._open = true;\n                this.PrepareList();\n\n                /**\n                 *\n                 */\n                if (this.FindActive() < 0) {\n                    this._eref.nativeElement.scrollTop = 0;\n                } else {\n                    this._eref.nativeElement.scrollTop = this.GetElement(this.FindActive()).offsetHeight * this.FindActive();\n                }\n            }\n        }, 0);\n    }\n\n    /**\n     *\n     */\n    RefExists() {\n        return typeof this.input !== 'undefined';\n    }\n\n    /**\n     *\n     */\n    FindActive(): number {\n        return this._list.reduce((result, item, index) => {\n            if (item.active) {\n                result = index;\n            }\n\n            return result;\n        }, -1);\n    }\n\n    /**\n     *\n     */\n    SetActive(index: number) {\n        if (index > this._list.length - 1 || index < 0) return;\n\n        /**\n         *\n         */\n        this.ClearActive();\n\n        this._list[index].active = true;\n        this.hover.emit(this._list[index].key);\n        /**\n         *\n         */\n        this.GetElement(index).classList.add('active');\n    }\n\n    /**\n     *\n     */\n    GetElement(index: number) {\n        return this._eref.nativeElement.children[index];\n    }\n\n    /**\n     *\n     */\n    ClearActive(): void {\n        this._list.forEach((item, index) => {\n            item.active = false;\n\n            /**\n             *\n             */\n            this.GetElement(index).classList.remove('active');\n        });\n    }\n\n    /**\n     *\n     */\n    PrepareList() {\n        this._list = Object.keys(this.list).map((key) => {\n            return {\n                key,\n                active: this.ActiveItem(key)\n            }\n        });\n\n        /**\n         *\n         */\n        this.PrepareChildrenList();\n    }\n\n    /**\n     *\n     */\n    ActiveItem(item: any) {\n        return this.active !== null && item === this.active;\n    }\n\n    /**\n     *\n     */\n    DetermineActiveClass() {\n        this._list.forEach((item, index) => {\n            if (typeof this.GetElement(index) === 'undefined') {\n                return;\n            }\n\n            /**\n             *\n             */\n            this.GetElement(index).classList.remove('active');\n            if (item.active)\n                this.GetElement(index).classList.add('active');\n        })\n\n    }\n\n    /**\n     *\n     */\n    PrepareChildrenList() {\n        const list = this._eref.nativeElement.children;\n\n        setTimeout(() => {\n            for (let i = 0; i < list.length; i++) {\n                list[i].id = this._class + i;\n            }\n        }, 0);\n\n        /**\n         *\n         */\n        this.DetermineActiveClass();\n\n    };\n\n    /**\n     *\n     */\n    DeReference(object: { active: boolean, [value: string]: any }) {\n        const {item} = object;\n\n        /**\n         *\n         */\n        return Object.assign({}, {...item});\n    }\n\n    /**\n     *\n     */\n    ngOnDestroy() {\n        if (this.RefExists()) {\n            this.wheelHandler = this.removeEventListner.bind(this.input);\n            // this.input.removeEventListener('keydown');\n        }\n\n        if(!this.completion) {\n            this.wheelHandler = this.removeEventListner.bind(document);\n            // document.removeEventListener('keydown');\n        }\n\n        if(!IsMobileOrTablet()) {\n            this.wheelHandler = this.removeEventListner.bind(this._eref);\n            // this._eref.nativeElement.removeEventListener('mouseover');\n        }\n    }\n\n    removeEventListner(elem: Element) {\n        elem.removeEventListener('wheel', this.wheelHandler, true);\n    }\n}\n","import {debounceTime} from 'rxjs/operators';\nimport {Component, EventEmitter, Input, NgZone, OnInit, Output, ViewChild} from '@angular/core';\nimport {AutocompleteGroup} from '../classes/AutocompleteGroup';\nimport {\n    AutocompleteItem,\n    ComparableAutoCompleteString,\n    SearchableAutoCompleteString,\n    StrippedAutocompleteGroup\n} from '../classes/AutocompleteItem';\nimport {NgDropdownDirective} from '../dropdown/ng-dropdown.directive';\nimport {GroupNoResult} from '../utils/utils';\nimport {Subject} from 'rxjs';\n\n@Component({\n    selector: 'ng-completer',\n    template: `\n        <div #element class=\"ng-autocomplete-dropdown\"\n             [ngClass]=\"{'open': dropdown._open, 'is-loading': _DOM.isLoading, 'is-async': group.async !== null}\">\n\n            <!--GROUP: {{group.key}}-->\n\n            <div class=\"ng-autocomplete-inputs\" (click)=\"RegisterClick()\"\n                 [ngClass]=\"{'completion-off': !group.completion}\">\n                <span class=\"ng-autocomplete-placeholder\"\n                      *ngIf=\"_DOM.placeholder\">\n                  <ng-container *ngIf=\"group.placeholderValue\">\n                      <ng-template *ngTemplateOutlet=\"group.placeholderValue; context: {$implicit: _DOM.placeholder}\"></ng-template>\n                  </ng-container>\n                  <ng-template [ngIf]=\"!group.placeholderValue\">\n                      {{_DOM.placeholder.title}}\n                  </ng-template>\n                </span>\n                <input #input type=\"text\" [placeholder]=\"group.placeholder\" name=\"completer\" [(ngModel)]=\"_completer\"\n                       (ngModelChange)=\"_change.next($event);\"\n                       [value]=\"_completer\"\n                       autocomplete=\"off\"\n                       (click)=\"OpenDropdown()\"\n                       (focus)=\"OpenDropdown()\" class=\"ng-autocomplete-input\">\n\n                <span [ngClass]=\"{'open': dropdown._open}\" class=\"ng-autocomplete-dropdown-icon\"\n                      (click)=\"DropdownArray()\"></span>\n            </div>\n\n            <div class=\"ng-dropdown\" ngDropdown [list]=\"_items\" [element]=\"element\" [input]=\"input\"\n                 [ngClass]=\"{'is-initial-empty': _DOM.empty}\"\n                 [active]=\"_DOM.selected\" [key]=\"group.key\"\n                 [completion]=\"group.completion\"\n                 (hover)=\"OnHoverDropdownItem($event)\"\n                 (selected)=\"SelectItem($event)\"\n                 (closed)=\"OnInputBlurred()\"\n            >\n                <div *ngIf=\"_DOM.notFound && group.noResults\" class=\"dropdown-item no-results\">\n                    <ng-container *ngIf=\"group.noResults\">\n                        <ng-template *ngTemplateOutlet=\"group.noResults; context: {$implicit: _completer}\"></ng-template>\n                    </ng-container>\n                </div>\n\n                <div class=\"dropdown-item\" *ngFor=\"let item of _items | keys; let i = index\"\n                     (click)=\"SelectItem(_items[item])\">\n\n                    <ng-container *ngIf=\"group.dropdownValue\">\n                        <ng-template\n                            *ngTemplateOutlet=\"group.dropdownValue; context: {$implicit: _items[item], highlight: _items[item].title | highlight:_highlight}\"></ng-template>\n                    </ng-container>\n\n                    <div *ngIf=\"!group.dropdownValue\" [innerHTML]=\"_items[item].title | highlight:_highlight\"></div>\n                </div>\n            </div>\n        </div>`,\n    styles: [`\n        .ng-autocomplete-inputs {\n            position: relative;\n        }\n\n        .ng-autocomplete-inputs.completion-off {\n            cursor: pointer;\n        }\n\n        .ng-autocomplete-inputs.completion-off input {\n            pointer-events: none;\n        }\n\n        .ng-autocomplete-placeholder {\n            pointer-events: none;\n        }\n\n        .ng-autocomplete-dropdown-icon {\n\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown {\n            display: none;\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown.is-empty {\n            display: none;\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown.open {\n            display: block;\n        }\n    `]\n})\nexport class CompleterComponent implements OnInit {\n    @ViewChild(NgDropdownDirective) public dropdown: NgDropdownDirective;\n\n    @Output() public cleared: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public selected: EventEmitter<StrippedAutocompleteGroup> = new EventEmitter<StrippedAutocompleteGroup>();\n    @Output('no-result') public noResult: EventEmitter<GroupNoResult> = new EventEmitter<GroupNoResult>();\n\n    @Input() public group: AutocompleteGroup = <AutocompleteGroup>{};\n\n    _change: Subject<string> = new Subject<string>();\n    _items: { [value: string]: AutocompleteItem } = {};\n    _completer: string = '';\n    _highlight: string = '';\n\n    _DOM = {\n        notFound: <boolean>false,\n        empty: <boolean>false,\n        placeholder: <AutocompleteItem>null,\n        selected: <string>'',\n        isLoading: <boolean>false\n\n    };\n\n    constructor(private _zone: NgZone) {\n    }\n\n    /**\n     *\n     */\n    ngOnInit() {\n        this._zone.runOutsideAngular(() => {\n\n            this._change.pipe(\n                debounceTime(300))\n                .subscribe((value: string) => {\n                    this._zone.run(() => {\n                        if (this.group.async !== null) {\n                            this.RunAsyncFunction(value);\n                        } else {\n                            this.OnModelChange(value)\n                        }\n                    });\n                });\n        });\n\n        this.SetItems();\n    }\n\n    /**\n     * Only used when completion is off.\n     */\n    RegisterClick() {\n        if (!this.group.completion) {\n            this.SwitchDropdownState()\n        }\n    }\n\n    /**\n     *\n     */\n    DropdownArray() {\n        if (this.group.completion) {\n            this.SwitchDropdownState()\n        }\n    }\n\n    /**\n     *\n     */\n    SwitchDropdownState() {\n        if (this.dropdown._open) {\n            this.CloseDropdown();\n            return;\n        }\n\n        /**\n         *\n         */\n        this.OpenDropdown()\n    }\n\n    /**\n     *\n     */\n    CloseDropdown() {\n        this.dropdown._open = false;\n\n        /**\n         *\n         */\n        this._DOM.placeholder = null;\n    }\n\n    /**\n     *\n     */\n    OpenDropdown() {\n        this.dropdown.Open();\n\n        /**\n         *\n         */\n        this._DOM.placeholder = null;\n    }\n\n    /**\n     *\n     */\n    SetItems() {\n        this._items = this.group.value;\n        this.IsInitialEmpty();\n    }\n\n    /**\n     *\n     */\n    SelectItem(item: AutocompleteItem | string) {\n        let i: AutocompleteItem;\n        if (typeof item === 'string') {\n            i = this._items[item];\n            this._DOM.selected = item;\n        } else {\n            i = item;\n            this._DOM.selected = SearchableAutoCompleteString(item.title, item.id);\n        }\n\n        this._completer = i.title;\n        this._highlight = '';\n\n        this.dropdown.Close(null, true);\n        this.selected.emit({group: {key: this.group.key}, item: i});\n    }\n\n    /**\n     *\n     */\n    async RunAsyncFunction(value: string) {\n        this._completer = value;\n        this._highlight = value;\n\n        this._DOM.selected = null;\n\n        if (value.length === 0) {\n            this.group.InitialValue();\n            this.ClearModel();\n\n            this.dropdown.Close('', true)\n        } else if (value.length > this.group.searchLength) {\n            this._DOM.isLoading = true;\n\n            let values = await this.group.async(value);\n            this.group.SetNewValue(values, this.group.keys.titleKey);\n\n            this._DOM.isLoading = false;\n\n            this._items = this.group.value;\n            this.EmptySearch(this._items, value);\n\n            // User has typed something now, results could be shown. We need to remove the \"is-initial-empty\" class.\n            this.IsInitialEmpty();\n            this.dropdown.Open();\n        }\n    }\n\n    /**\n     *\n     */\n    OnModelChange(value: string) {\n        this._completer = value;\n        this._highlight = value;\n\n        this._DOM.selected = null;\n\n        if (value.length === 0) {\n            this.ClearModel();\n\n            this.dropdown.Close('', true)\n        } else if (value.length > this.group.searchLength) {\n            this.CompareItemsAndSet(value);\n        }\n    }\n\n    /**\n     *\n     */\n    ClearModel() {\n        this._DOM.selected = null;\n        this._DOM.notFound = false;\n\n        this.cleared.emit(this.group.key);\n    }\n\n    /**\n     *\n     */\n    CompareItemsAndSet(value: string) {\n        const obj = {};\n        for (let key in this.group.value) {\n            if (ComparableAutoCompleteString(key).toLowerCase().indexOf(value.toLowerCase()) > -1) {\n                obj[key] = this.group.value[key]\n            }\n        }\n\n        this._items = obj;\n        this.EmptySearch(this._items, value);\n\n        // User has typed something now, results could be shown. We need to remove the \"is-initial-empty\" class.\n        this.IsInitialEmpty();\n        this.dropdown.Open();\n    }\n\n    /**\n     *\n     */\n    OnInputBlurred() {\n        if (!this.HasChosenValue()) {\n            /**\n             * Let component know completer input has been cleared -\n             * this function shows the list again, also resets children, if chosen.\n             */\n            this.OnModelChange('');\n        }\n    }\n\n    /**\n     *\n     */\n    OnHoverDropdownItem(item: AutocompleteItem | string) {\n        if (typeof item == 'string') {\n            this._DOM.placeholder = this._items[item];\n            return;\n        }\n        if (item == null) {\n            this._DOM.placeholder = null;\n            return;\n        }\n\n        this._DOM.placeholder = item;\n    }\n\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n\n    IsInitialEmpty() {\n        if (Object.keys(this._items).length === 0 && this._completer.length === 0) {\n            this._DOM.empty = true;\n            return;\n        }\n\n        this._DOM.empty = false;\n    }\n\n    /**\n     *\n     */\n    HasChosenValue(): boolean {\n        return this._DOM.selected !== null\n    }\n\n    /**\n     *\n     */\n    EmptySearch(obj: Object, query: string) {\n        if (Object.keys(obj).length > 0) {\n            this._DOM.notFound = false;\n            return\n        }\n\n        this._DOM.notFound = true;\n        this.noResult.emit({group: {key: this.group.key}, query: query})\n    }\n\n    /**\n     *\n     */\n    ClearValue() {\n        this._completer = '';\n        this._DOM.selected = null;\n\n        this.group.InitialValue();\n        this.IsInitialEmpty();\n        /**\n         *\n         */\n        this.selected.emit({group: {key: this.group.key}, item: null});\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewChildren\n} from '@angular/core';\nimport {AutocompleteGroup} from './classes/AutocompleteGroup';\nimport {SelectedAutocompleteItem} from './classes/typing';\nimport {CompleterComponent} from './completer/completer.component';\nimport {GroupNoResult, ReturnStringArrayByID} from './utils/utils';\nimport {Subject} from 'rxjs';\n\n@Component({\n    selector: 'ng-auto-complete',\n    template: `\n        <div #init style=\"display: none;\"><span class=\"after-view-init\"></span></div>\n        <ng-completer [ngClass]=\"classes\" *ngFor=\"let item of group\" (cleared)=\"InputCleared($event)\"\n                      (no-result)=\"NoResult($event)\"\n                      (selected)=\"ListenToSelected($event)\"\n                      [group]=\"item\"></ng-completer>\n    `,\n})\nexport class NgAutoCompleteComponent implements OnInit {\n    @ViewChildren(CompleterComponent) public completers: QueryList<CompleterComponent>;\n    @ViewChild('init') public init: ElementRef;\n\n    @Output() public selected: EventEmitter<SelectedAutocompleteItem> = new EventEmitter<SelectedAutocompleteItem>();\n    @Output('no-result') public noResult: EventEmitter<GroupNoResult> = new EventEmitter<GroupNoResult>();\n\n    @Input() public group: AutocompleteGroup[] = [];\n    @Input() public key: string = '';\n    @Input() public classes: string[] = [];\n\n    _viewHasBeenInit: boolean = false;\n    _viewInitSubject: Subject<boolean> = new Subject<boolean>();\n\n    constructor(private cdr: ChangeDetectorRef) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n\n    }\n\n    /**\n     *\n     */\n    ngOnInit() {\n    }\n\n    /**\n     *\n     */\n    ngAfterViewChecked() {\n        if (!this._viewHasBeenInit) {\n            let el = this.init.nativeElement.querySelector('.after-view-init');\n\n            if (window.getComputedStyle(el).length > 0) {\n                this._viewHasBeenInit = true;\n                this._viewInitSubject.next(true);\n            }\n        }\n    }\n\n    /**\n     *\n     */\n    ListenToSelected(selected: SelectedAutocompleteItem) {\n        this.selected.emit(selected);\n\n        /**\n         *\n         */\n        this.SetChildren(selected);\n    }\n\n    /**\n     *\n     */\n    NoResult(group: GroupNoResult) {\n        this.noResult.emit(group);\n    }\n\n    /**\n     *\n     */\n    InputCleared(key: string) {\n        this.group.forEach((group) => {\n            if (group.key === key || group.parent === key) {\n                this.ResetInput(group.key);\n            }\n        });\n\n        /**\n         * Items may have changed, need to te re-set list in completer components.\n         */\n        this.TriggerChange();\n    }\n\n    /**\n     *\n     */\n    SetChildren(selected: SelectedAutocompleteItem) {\n        this.group.forEach((item) => {\n\n            if (item.parent == selected.group.key) {\n                this.ResetInput(item.key);\n\n                /**\n                 *\n                 */\n                if (selected.item !== null && typeof selected.item.children !== 'undefined') {\n                    item.SetNewValue(selected.item.children, selected.group.keys.titleKey);\n                }\n            }\n        });\n\n        /**\n         * Items may have changed, need to te re-set list in completer components.\n         */\n        this.TriggerChange();\n    }\n\n    /**\n     *\n     */\n    TriggerChange() {\n        this.completers.forEach((completer) => {\n            completer.SetItems();\n        });\n    }\n\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    GetInput(key: string): CompleterComponent {\n        return this.completers.reduce((result, completer) => {\n            if (completer.group.key === key) {\n                result = completer;\n            }\n\n            return result;\n        }, <CompleterComponent>{});\n    }\n\n    /**\n     *\n     */\n    SubscribeInput(key: string, f: (completer: CompleterComponent) => void) {\n        if (this._viewHasBeenInit) {\n            let completer = this.GetInput(key);\n\n            /**\n             *\n             */\n            f(completer);\n            return;\n        }\n\n        this._viewInitSubject.subscribe((_bool) => {\n            let completer = this.GetInput(key);\n            setTimeout(() => {\n                f(completer);\n            });\n\n            this._viewInitSubject.unsubscribe();\n        });\n    }\n\n    /**\n     *\n     */\n    ResetInput(key: string) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.ClearValue();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    SetValues(key: string, values: { id?: string | number; [value: string]: any }[]) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.group.SetValues(values);\n\n                /**\n                 * Items may have changed, need to te re-set list in completer components.\n                 */\n                this.TriggerChange();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    SetTemplate(key: string, type: 'noResults' | 'placeholderValue' | 'dropdownValue', template: TemplateRef<any>) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.group[type] = template;\n\n                /**\n                 * Items may have changed, need to te re-set list in completer components.\n                 */\n                this.TriggerChange();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    SetAsync(key: string, promise: (str: string) => Promise<{ id: string | number; [value: string]: any }[]>) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.group.async = promise;\n\n                /**\n                 * Items may have changed, need to te re-set list in completer components.\n                 */\n                this.TriggerChange();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    SelectItem(key: string, id: string | number) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                Object.keys(completer._items).forEach((key) => {\n                    let f = `_id_${String(id)}`;\n                    let c = key.substring(key.indexOf(f), key.length);\n\n                    if (f === c) {\n                        completer.SelectItem(completer._items[key]);\n                    }\n                });\n\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    RemovableValues(key: string, ids: { id: string | number, [value: string]: any }[]) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.group.Removables(ReturnStringArrayByID(ids));\n\n                /**\n                 * Items may have changed, need to te re-set list in completer components.\n                 */\n                this.TriggerChange();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    ResetInputs() {\n        this.group.forEach((item) => {\n            this.ResetInput(item.key);\n        });\n    }\n\n    // =======================================================================//\n    // ! Static (utils)                                                       //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    static FindCompleter(key: string, list: QueryList<NgAutoCompleteComponent>): NgAutoCompleteComponent {\n        const completer = list.filter((completer: NgAutoCompleteComponent) => {\n            return key === completer.key;\n        });\n\n        if (typeof completer[0] !== 'undefined') {\n            return completer[0];\n        }\n\n        return null;\n    }\n}\n","import {Pipe, PipeTransform} from \"@angular/core\";\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n    transform(text: string, search: string): string {\n        if (typeof search === 'undefined') {\n            return text\n        }\n\n        let pattern = search.replace(/[\\-\\[\\]\\/{}()*+?.\\\\^$|]/g, '\\\\$&');\n        pattern = pattern.split(' ').filter((t) => t.length > 0).join('|');\n\n        /**\n         *\n         */\n        return text.replace(new RegExp(pattern, 'gi'), (match) => `<span class=\"dropdown-item-highlight\">${match}</span>`);\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'keys'\n})\nexport class KeyValuePipe implements PipeTransform {\n\n    transform(value: any, args?: any): any {\n        let keys = [];\n        for (let key in value) {\n            if (value.hasOwnProperty(key)) {\n                keys.push(key);\n            }\n        }\n\n        return keys;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {HighlightPipe} from './highlight';\nimport {KeyValuePipe} from './key-value';\n\n@NgModule({\n    imports: [],\n    declarations: [HighlightPipe, KeyValuePipe],\n    exports: [HighlightPipe, KeyValuePipe],\n})\nexport class PipeModule {\n\n    static forRoot() {\n        return {\n            ngModule: PipeModule,\n            providers: [],\n        };\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {NgAutoCompleteComponent} from './ng-auto-complete.component';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {CompleterComponent} from './completer/completer.component';\nimport {NgDropdownDirective} from './dropdown/ng-dropdown.directive';\nimport {PipeModule} from './pipes/pipes.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        PipeModule.forRoot()\n    ],\n    exports: [\n        NgAutoCompleteComponent,\n        CompleterComponent,\n    ],\n    declarations: [\n        NgAutoCompleteComponent,\n        CompleterComponent,\n        NgDropdownDirective\n    ]\n})\nexport class NgAutoCompleteModule {\n}\n"],"names":[],"mappings":"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"}
