import { EventEmitter, NgZone, OnInit } from '@angular/core';
import { AutocompleteGroup } from '../classes/AutocompleteGroup';
import { AutocompleteItem, StrippedAutocompleteGroup } from '../classes/AutocompleteItem';
import { NgDropdownDirective } from '../dropdown/ng-dropdown.directive';
import { GroupNoResult } from '../utils/utils';
import { Subject } from 'rxjs';
export declare class CompleterComponent implements OnInit {
    private _zone;
    dropdown: NgDropdownDirective;
    cleared: EventEmitter<string>;
    selected: EventEmitter<StrippedAutocompleteGroup>;
    noResult: EventEmitter<GroupNoResult>;
    group: AutocompleteGroup;
    _change: Subject<string>;
    _items: {
        [value: string]: AutocompleteItem;
    };
    _completer: string;
    _highlight: string;
    _DOM: {
        notFound: boolean;
        empty: boolean;
        placeholder: AutocompleteItem;
        selected: string;
        isLoading: boolean;
    };
    constructor(_zone: NgZone);
    /**
     *
     */
    ngOnInit(): void;
    /**
     * Only used when completion is off.
     */
    RegisterClick(): void;
    /**
     *
     */
    DropdownArray(): void;
    /**
     *
     */
    SwitchDropdownState(): void;
    /**
     *
     */
    CloseDropdown(): void;
    /**
     *
     */
    OpenDropdown(): void;
    /**
     *
     */
    SetItems(): void;
    /**
     *
     */
    SelectItem(item: AutocompleteItem | string): void;
    /**
     *
     */
    RunAsyncFunction(value: string): Promise<void>;
    /**
     *
     */
    OnModelChange(value: string): void;
    /**
     *
     */
    ClearModel(): void;
    /**
     *
     */
    CompareItemsAndSet(value: string): void;
    /**
     *
     */
    OnInputBlurred(): void;
    /**
     *
     */
    OnHoverDropdownItem(item: AutocompleteItem | string): void;
    IsInitialEmpty(): void;
    /**
     *
     */
    HasChosenValue(): boolean;
    /**
     *
     */
    EmptySearch(obj: Object, query: string): void;
    /**
     *
     */
    ClearValue(): void;
}
