{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://ng-auto-complete/lib/classes/AutocompleteItem.ts","ng://ng-auto-complete/lib/utils/utils.ts","ng://ng-auto-complete/lib/dropdown/ng-dropdown.directive.ts","ng://ng-auto-complete/lib/completer/completer.component.ts","ng://ng-auto-complete/lib/ng-auto-complete.component.ts","ng://ng-auto-complete/lib/pipes/highlight.ts","ng://ng-auto-complete/lib/pipes/key-value.ts","ng://ng-auto-complete/lib/pipes/pipes.module.ts","ng://ng-auto-complete/lib/ng-auto-complete.module.ts","ng://ng-auto-complete/lib/classes/AutocompleteGroup.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__generator","thisArg","body","f","y","g","_","label","sent","trys","ops","next","verb","throw","return","Symbol","iterator","v","step","op","TypeError","done","value","pop","push","e","AutocompleteItem","title","id","original","SearchableAutoCompleteItems","items","titleKey","childrenKey","reduce","r","SearchableAutoCompleteString","TransformToAutocompleteItem","key","replace","String","ComparableAutoCompleteString","str","object","item","children","UsedCodeList","ArrowDown","ArrowUp","Enter","Escape","Tab","MetaLeft","AltLeft","ControlLeft","ShiftLeft","ArrowLeft","ArrowRight","MetaRight","AltRight","ReturnStringArrayByID","array","result","toString","IsMobileOrTablet","isMobile","test","navigator","userAgent","substr","NgDropdownDirective","_eref","list","active","input","element","completion","hover","EventEmitter","selected","closed","_open","_list","_class","ngOnInit","_this","RefExists","addEventListener","event","keyDown","document","nativeElement","OnMouseOver","PrepareList","ngOnChanges","changes","firstChange","currentValue","stopImmediatePropagation","stopPropagation","code","Open","SetActive","FindActive","DropdownFocusAreaDown","preventDefault","DropdownFocusAreaUp","EmitSelected","Close","shiftKey","movementX","movementY","el","target","srcElement","includes","Number","slice","emit","scroll","offsetHeight","scrollTop","GetElement","offsetTop","defineProperty","force","close","ClearActive","contains","setTimeout","classList","index","add","forEach","remove","keys","map","ActiveItem","PrepareChildrenList","DetermineActiveClass","DeReference","ngOnDestroy","wheelHandler","removeEventListner","bind","elem","removeEventListener","Directive","args","selector","ElementRef","Input","Output","HostBinding","HostListener","CompleterComponent","_zone","cleared","noResult","group","_change","Subject","_items","_completer","_highlight","_DOM","notFound","empty","placeholder","isLoading","runOutsideAngular","pipe","debounceTime","subscribe","run","async","RunAsyncFunction","OnModelChange","SetItems","RegisterClick","SwitchDropdownState","DropdownArray","dropdown","CloseDropdown","OpenDropdown","IsInitialEmpty","SelectItem","__awaiter","_arguments","P","generator","Promise","resolve","reject","fulfilled","rejected","then","InitialValue","ClearModel","searchLength","values","_a","SetNewValue","EmptySearch","CompareItemsAndSet","obj","toLowerCase","indexOf","OnInputBlurred","HasChosenValue","OnHoverDropdownItem","query","ClearValue","Component","template","NgZone","ViewChild","NgAutoCompleteComponent","cdr","classes","_viewHasBeenInit","_viewInitSubject","ngAfterViewChecked","init","querySelector","window","getComputedStyle","ListenToSelected","SetChildren","NoResult","InputCleared","parent","ResetInput","TriggerChange","completers","completer","GetInput","SubscribeInput","_bool","unsubscribe","SetValues","SetTemplate","type","SetAsync","promise","substring","RemovableValues","ids","Removables","ResetInputs","FindCompleter","filter","ChangeDetectorRef","ViewChildren","HighlightPipe","transform","text","search","pattern","split","join","RegExp","match","Pipe","name","KeyValuePipe","PipeModule","forRoot","ngModule","providers","NgModule","imports","declarations","exports","NgAutoCompleteModule","CommonModule","FormsModule","AutocompleteGroup","removals","SetCopy","FilterRemovals","_copy","initialValue","filtered","k","CreateNewAutocompleteGroup","NotUsedKey"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export interface StrippedAutocompleteGroup {\n    group: { key: string },\n    item: AutocompleteItem\n}\n\nexport class AutocompleteItem {\n\n    title: string;\n    id?: string | number;\n    children: any[];\n    original: any;\n\n    constructor(title: string, id: string | number, original: any) {\n        this.title = title;\n        this.id = id;\n        this.original = original;\n    }\n}\n\n/**\n *\n */\nexport function SearchableAutoCompleteItems(items: { id?: string|number; [value: string]: any }[], titleKey: string, childrenKey: string | null = null): {[value: string]: AutocompleteItem} {\n    return items.reduce(function (r, i) {\n        const t = SearchableAutoCompleteString(i[titleKey], i.id);\n\n        if(typeof r[t] === 'undefined') {\n            r[t] = TransformToAutocompleteItem(i, titleKey, childrenKey)\n        }\n\n        return r;\n    }, {})\n}\n\n/**\n *\n */\nexport function SearchableAutoCompleteString(key: string, id: string|number) {\n    return `${key.replace(/ /g,\"_\")}_id_${String(id)}`;\n}\n\n/**\n *\n */\nexport function ComparableAutoCompleteString(str: string) {\n    return str.replace(/_/g,\" \");\n}\n\n/**\n * object must have an ID\n */\n\nexport function TransformToAutocompleteItem(object: { id?: string | number; [value: string]: any }, titleKey: string, childrenKey: string | null = null) {\n    const item = new AutocompleteItem(object[titleKey], object.id, object);\n\n    /**\n     * if there are children, add these.\n     */\n    if (childrenKey !== null) item.children = object[childrenKey];\n\n    return item\n}\n","import { AutocompleteItem } from '../classes/AutocompleteItem';\n\nconst UsedCodeList = {\n    ArrowDown:      40,\n    ArrowUp:        38,\n    Enter:          13,\n    Escape:         27,\n    Tab:            9,\n    MetaLeft:       91,\n    AltLeft:        18,\n    ControlLeft:    17,\n    ShiftLeft:      16,\n    ArrowLeft:      37,\n    ArrowRight:     39,\n    MetaRight:      93,\n    AltRight:       18\n};\n\nexport interface GroupNoResult {\n    group: {key: string};\n    query: string;\n}\n\n/**\n *\n */\nexport function ReturnStringArrayByID(array: { id: string | number, [value: string]: any }[]) {\n    return array.reduce((result, item) => {\n        result.push(item.id.toString());\n\n        return result\n    }, [])\n}\n\n/**\n *\n */\nexport function FilterRemovals(removals: string[], list: AutocompleteItem[]) {\n    return list.filter((item) => {\n        return removals.indexOf(item.id.toString()) <= -1;\n    });\n}\n\n/**\n *\n */\nexport function IsMobileOrTablet() {\n    let isMobile = false;\n    if (/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|ipad|iris|kindle|Android|Silk|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(navigator.userAgent)\n        || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(navigator.userAgent.substr(0, 4))) {\n        isMobile = true;\n    }\n\n    return isMobile\n}\n\nexport function NotUsedKey(code: string) {\n    return typeof UsedCodeList[code] === 'undefined';\n}\n","import {\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostBinding,\n    HostListener,\n    Input,\n    OnChanges,\n    OnDestroy,\n    OnInit,\n    Output,\n    SimpleChanges\n} from \"@angular/core\";\nimport {IsMobileOrTablet} from \"../utils/utils\";\n\n@Directive({\n    selector: '[ngDropdown]'\n})\nexport class NgDropdownDirective implements OnChanges, OnInit, OnDestroy {\n    @Input() public list: any[] = [];\n    @Input() public active: any = null;\n\n    @Input() public input: Element = null;\n    @Input() public element: Element = null;\n\n    @Input() public key: string = '';\n    @Input() public completion: boolean = true;\n\n    @Output() public hover: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public selected: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public closed: EventEmitter<any> = new EventEmitter<any>();\n\n    _open: boolean = false;\n    _list: { active: boolean, [value: string]: any }[] = [];\n    _class: string = '';\n    wheelHandler: any;\n\n    constructor(public _eref: ElementRef) {\n    }\n\n    /**\n     *\n     */\n    ngOnInit() {\n        this._class = `dr-item-${this.key}-`;\n\n        if (this.RefExists()) {\n            this.input.addEventListener('keydown', (event: KeyboardEvent) => {\n                this.keyDown(event);\n            });\n        }\n\n        if(!this.completion) {\n            document.addEventListener('keydown', (event: KeyboardEvent) => {\n                if(this._open) {\n                    this.keyDown(event);\n                }\n            });\n        }\n\n        if(!IsMobileOrTablet()) {\n            this._eref.nativeElement.addEventListener('mouseover', (event: MouseEvent) => {\n                this.OnMouseOver(event);\n            });\n\n        }\n\n        /**\n         *\n         */\n        this.PrepareList();\n    }\n\n    /**\n     *\n     */\n    ngOnChanges(changes: SimpleChanges) {\n        if (typeof changes['active'] !== 'undefined' && !changes['active'].firstChange) {\n            this.PrepareList();\n        }\n        if (typeof changes['list'] !== 'undefined') {\n            this.list = changes['list'].currentValue;\n\n            /**\n             *\n             */\n            this.PrepareList();\n        }\n    }\n\n    /**\n     *\n     */\n    keyDown(event: KeyboardEvent) {\n        event.stopImmediatePropagation();\n        event.stopPropagation();\n\n        /**\n         *\n         */\n        switch (event.code) {\n            case 'ArrowDown':\n                this.Open();\n\n                /**\n                 *\n                 */\n                this.SetActive(this.FindActive() + 1);\n                this.DropdownFocusAreaDown();\n\n                event.preventDefault();\n                break;\n            case 'ArrowUp':\n                this.Open();\n\n                /**\n                 *\n                 */\n                this.SetActive(this.FindActive() - 1);\n                this.DropdownFocusAreaUp();\n\n                event.preventDefault();\n                break;\n            case 'Enter':\n                this.EmitSelected();\n                this.Close(null, true);\n\n                event.preventDefault();\n                break;\n            case 'Escape':\n                this.Close(null, true);\n\n                event.preventDefault();\n                break;\n            case 'Tab':\n                if(!event.shiftKey) {\n                    this.EmitSelected();\n                }\n\n                this.Close(null, true);\n                break;\n            default:\n                return;\n        }\n    }\n\n    /**\n     *\n     */\n    OnMouseOver(event: MouseEvent) {\n        // Mouse didn't actually move, so no logic needed.\n        if(event.movementX == 0 && event.movementY == 0) {\n            return\n        }\n\n        /**\n         *\n         */\n        const el: any = event.target || event.srcElement;\n        if (el.id.length > 0 && el.id.includes(this._class)) {\n            this.SetActive(Number(el.id.slice(this._class.length, el.id.length)));\n        }\n    }\n\n    /**\n     *\n     */\n    EmitSelected() {\n        if(this.FindActive() > -1) {\n            this.selected.emit(this._list[this.FindActive()].key);\n        }\n    }\n\n    /**\n     *\n     */\n    DropdownFocusAreaDown() {\n        let scroll = this._eref.nativeElement.offsetHeight + this._eref.nativeElement.scrollTop;\n\n        /**\n         *\n         */\n        if((this.GetElement(this.FindActive()).offsetTop + this.GetElement(this.FindActive()).offsetHeight) > scroll) {\n            this._eref.nativeElement.scrollTop = this.GetElement(this.FindActive()).offsetTop - (this._eref.nativeElement.offsetHeight - this.GetElement(this.FindActive()).offsetHeight)\n        }\n    }\n\n    /**\n     *\n     */\n    DropdownFocusAreaUp() {\n        let scroll = this._eref.nativeElement.scrollTop;\n\n        /**\n         *\n         */\n        if(this.GetElement(this.FindActive()).offsetTop < scroll && scroll > 0) {\n            this._eref.nativeElement.scrollTop = this.GetElement(this.FindActive()).offsetTop;\n        }\n    }\n\n    // =======================================================================//\n    // ! Bindings                                                             //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    @HostBinding('class.open')\n    get opened() {\n        return this._open;\n    }\n\n\n    // =======================================================================//\n    // ! Listeners                                                            //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    @HostListener('document:click', ['$event'])\n    Close(event, force: boolean = false) {\n        if(!this._open) {\n            return;\n        }\n\n        const close = () => {\n            this._open = false;\n\n            /**\n             * Emit NULL so listening components know what to do.\n             */\n            this.ClearActive();\n            this.hover.emit(null);\n            this.closed.emit();\n        };\n\n        if (force) {\n            close();\n            return;\n        }\n\n        if ((this._open && (!this.element.contains(event.target)))) {\n            close();\n        }\n    }\n\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    Open() {\n        setTimeout(() => {\n            if (!this._open && !this._eref.nativeElement.classList.contains('is-initial-empty')) {\n                this._open = true;\n                this.PrepareList();\n\n                /**\n                 *\n                 */\n                if (this.FindActive() < 0) {\n                    this._eref.nativeElement.scrollTop = 0;\n                } else {\n                    this._eref.nativeElement.scrollTop = this.GetElement(this.FindActive()).offsetHeight * this.FindActive();\n                }\n            }\n        }, 0);\n    }\n\n    /**\n     *\n     */\n    RefExists() {\n        return typeof this.input !== 'undefined';\n    }\n\n    /**\n     *\n     */\n    FindActive(): number {\n        return this._list.reduce((result, item, index) => {\n            if (item.active) {\n                result = index;\n            }\n\n            return result;\n        }, -1);\n    }\n\n    /**\n     *\n     */\n    SetActive(index: number) {\n        if (index > this._list.length - 1 || index < 0) return;\n\n        /**\n         *\n         */\n        this.ClearActive();\n\n        this._list[index].active = true;\n        this.hover.emit(this._list[index].key);\n        /**\n         *\n         */\n        this.GetElement(index).classList.add('active');\n    }\n\n    /**\n     *\n     */\n    GetElement(index: number) {\n        return this._eref.nativeElement.children[index];\n    }\n\n    /**\n     *\n     */\n    ClearActive(): void {\n        this._list.forEach((item, index) => {\n            item.active = false;\n\n            /**\n             *\n             */\n            this.GetElement(index).classList.remove('active');\n        });\n    }\n\n    /**\n     *\n     */\n    PrepareList() {\n        this._list = Object.keys(this.list).map((key) => {\n            return {\n                key,\n                active: this.ActiveItem(key)\n            }\n        });\n\n        /**\n         *\n         */\n        this.PrepareChildrenList();\n    }\n\n    /**\n     *\n     */\n    ActiveItem(item: any) {\n        return this.active !== null && item === this.active;\n    }\n\n    /**\n     *\n     */\n    DetermineActiveClass() {\n        this._list.forEach((item, index) => {\n            if (typeof this.GetElement(index) === 'undefined') {\n                return;\n            }\n\n            /**\n             *\n             */\n            this.GetElement(index).classList.remove('active');\n            if (item.active)\n                this.GetElement(index).classList.add('active');\n        })\n\n    }\n\n    /**\n     *\n     */\n    PrepareChildrenList() {\n        const list = this._eref.nativeElement.children;\n\n        setTimeout(() => {\n            for (let i = 0; i < list.length; i++) {\n                list[i].id = this._class + i;\n            }\n        }, 0);\n\n        /**\n         *\n         */\n        this.DetermineActiveClass();\n\n    };\n\n    /**\n     *\n     */\n    DeReference(object: { active: boolean, [value: string]: any }) {\n        const {item} = object;\n\n        /**\n         *\n         */\n        return Object.assign({}, {...item});\n    }\n\n    /**\n     *\n     */\n    ngOnDestroy() {\n        if (this.RefExists()) {\n            this.wheelHandler = this.removeEventListner.bind(this.input);\n            // this.input.removeEventListener('keydown');\n        }\n\n        if(!this.completion) {\n            this.wheelHandler = this.removeEventListner.bind(document);\n            // document.removeEventListener('keydown');\n        }\n\n        if(!IsMobileOrTablet()) {\n            this.wheelHandler = this.removeEventListner.bind(this._eref);\n            // this._eref.nativeElement.removeEventListener('mouseover');\n        }\n    }\n\n    removeEventListner(elem: Element) {\n        elem.removeEventListener('wheel', this.wheelHandler, true);\n    }\n}\n","import {debounceTime} from 'rxjs/operators';\nimport {Component, EventEmitter, Input, NgZone, OnInit, Output, ViewChild} from '@angular/core';\nimport {AutocompleteGroup} from '../classes/AutocompleteGroup';\nimport {\n    AutocompleteItem,\n    ComparableAutoCompleteString,\n    SearchableAutoCompleteString,\n    StrippedAutocompleteGroup\n} from '../classes/AutocompleteItem';\nimport {NgDropdownDirective} from '../dropdown/ng-dropdown.directive';\nimport {GroupNoResult} from '../utils/utils';\nimport {Subject} from 'rxjs';\n\n@Component({\n    selector: 'ng-completer',\n    template: `\n        <div #element class=\"ng-autocomplete-dropdown\"\n             [ngClass]=\"{'open': dropdown._open, 'is-loading': _DOM.isLoading, 'is-async': group.async !== null}\">\n\n            <!--GROUP: {{group.key}}-->\n\n            <div class=\"ng-autocomplete-inputs\" (click)=\"RegisterClick()\"\n                 [ngClass]=\"{'completion-off': !group.completion}\">\n                <span class=\"ng-autocomplete-placeholder\"\n                      *ngIf=\"_DOM.placeholder\">\n                  <ng-container *ngIf=\"group.placeholderValue\">\n                      <ng-template *ngTemplateOutlet=\"group.placeholderValue; context: {$implicit: _DOM.placeholder}\"></ng-template>\n                  </ng-container>\n                  <ng-template [ngIf]=\"!group.placeholderValue\">\n                      {{_DOM.placeholder.title}}\n                  </ng-template>\n                </span>\n                <input #input type=\"text\" [placeholder]=\"group.placeholder\" name=\"completer\" [(ngModel)]=\"_completer\"\n                       (ngModelChange)=\"_change.next($event);\"\n                       [value]=\"_completer\"\n                       autocomplete=\"off\"\n                       (click)=\"OpenDropdown()\"\n                       (focus)=\"OpenDropdown()\" class=\"ng-autocomplete-input\">\n\n                <span [ngClass]=\"{'open': dropdown._open}\" class=\"ng-autocomplete-dropdown-icon\"\n                      (click)=\"DropdownArray()\"></span>\n            </div>\n\n            <div class=\"ng-dropdown\" ngDropdown [list]=\"_items\" [element]=\"element\" [input]=\"input\"\n                 [ngClass]=\"{'is-initial-empty': _DOM.empty}\"\n                 [active]=\"_DOM.selected\" [key]=\"group.key\"\n                 [completion]=\"group.completion\"\n                 (hover)=\"OnHoverDropdownItem($event)\"\n                 (selected)=\"SelectItem($event)\"\n                 (closed)=\"OnInputBlurred()\"\n            >\n                <div *ngIf=\"_DOM.notFound && group.noResults\" class=\"dropdown-item no-results\">\n                    <ng-container *ngIf=\"group.noResults\">\n                        <ng-template *ngTemplateOutlet=\"group.noResults; context: {$implicit: _completer}\"></ng-template>\n                    </ng-container>\n                </div>\n\n                <div class=\"dropdown-item\" *ngFor=\"let item of _items | keys; let i = index\"\n                     (click)=\"SelectItem(_items[item])\">\n\n                    <ng-container *ngIf=\"group.dropdownValue\">\n                        <ng-template\n                            *ngTemplateOutlet=\"group.dropdownValue; context: {$implicit: _items[item], highlight: _items[item].title | highlight:_highlight}\"></ng-template>\n                    </ng-container>\n\n                    <div *ngIf=\"!group.dropdownValue\" [innerHTML]=\"_items[item].title | highlight:_highlight\"></div>\n                </div>\n            </div>\n        </div>`,\n    styles: [`\n        .ng-autocomplete-inputs {\n            position: relative;\n        }\n\n        .ng-autocomplete-inputs.completion-off {\n            cursor: pointer;\n        }\n\n        .ng-autocomplete-inputs.completion-off input {\n            pointer-events: none;\n        }\n\n        .ng-autocomplete-placeholder {\n            pointer-events: none;\n        }\n\n        .ng-autocomplete-dropdown-icon {\n\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown {\n            display: none;\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown.is-empty {\n            display: none;\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown.open {\n            display: block;\n        }\n    `]\n})\nexport class CompleterComponent implements OnInit {\n    @ViewChild(NgDropdownDirective) public dropdown: NgDropdownDirective;\n\n    @Output() public cleared: EventEmitter<string> = new EventEmitter<string>();\n    @Output() public selected: EventEmitter<StrippedAutocompleteGroup> = new EventEmitter<StrippedAutocompleteGroup>();\n    @Output('no-result') public noResult: EventEmitter<GroupNoResult> = new EventEmitter<GroupNoResult>();\n\n    @Input() public group: AutocompleteGroup = <AutocompleteGroup>{};\n\n    _change: Subject<string> = new Subject<string>();\n    _items: { [value: string]: AutocompleteItem } = {};\n    _completer: string = '';\n    _highlight: string = '';\n\n    _DOM = {\n        notFound: <boolean>false,\n        empty: <boolean>false,\n        placeholder: <AutocompleteItem>null,\n        selected: <string>'',\n        isLoading: <boolean>false\n\n    };\n\n    constructor(private _zone: NgZone) {\n    }\n\n    /**\n     *\n     */\n    ngOnInit() {\n        this._zone.runOutsideAngular(() => {\n\n            this._change.pipe(\n                debounceTime(300))\n                .subscribe((value: string) => {\n                    this._zone.run(() => {\n                        if (this.group.async !== null) {\n                            this.RunAsyncFunction(value);\n                        } else {\n                            this.OnModelChange(value)\n                        }\n                    });\n                });\n        });\n\n        this.SetItems();\n    }\n\n    /**\n     * Only used when completion is off.\n     */\n    RegisterClick() {\n        if (!this.group.completion) {\n            this.SwitchDropdownState()\n        }\n    }\n\n    /**\n     *\n     */\n    DropdownArray() {\n        if (this.group.completion) {\n            this.SwitchDropdownState()\n        }\n    }\n\n    /**\n     *\n     */\n    SwitchDropdownState() {\n        if (this.dropdown._open) {\n            this.CloseDropdown();\n            return;\n        }\n\n        /**\n         *\n         */\n        this.OpenDropdown()\n    }\n\n    /**\n     *\n     */\n    CloseDropdown() {\n        this.dropdown._open = false;\n\n        /**\n         *\n         */\n        this._DOM.placeholder = null;\n    }\n\n    /**\n     *\n     */\n    OpenDropdown() {\n        this.dropdown.Open();\n\n        /**\n         *\n         */\n        this._DOM.placeholder = null;\n    }\n\n    /**\n     *\n     */\n    SetItems() {\n        this._items = this.group.value;\n        this.IsInitialEmpty();\n    }\n\n    /**\n     *\n     */\n    SelectItem(item: AutocompleteItem | string) {\n        let i: AutocompleteItem;\n        if (typeof item === 'string') {\n            i = this._items[item];\n            this._DOM.selected = item;\n        } else {\n            i = item;\n            this._DOM.selected = SearchableAutoCompleteString(item.title, item.id);\n        }\n\n        this._completer = i.title;\n        this._highlight = '';\n\n        this.dropdown.Close(null, true);\n        this.selected.emit({group: {key: this.group.key}, item: i});\n    }\n\n    /**\n     *\n     */\n    async RunAsyncFunction(value: string) {\n        this._completer = value;\n        this._highlight = value;\n\n        this._DOM.selected = null;\n\n        if (value.length === 0) {\n            this.group.InitialValue();\n            this.ClearModel();\n\n            this.dropdown.Close('', true)\n        } else if (value.length > this.group.searchLength) {\n            this._DOM.isLoading = true;\n\n            let values = await this.group.async(value);\n            this.group.SetNewValue(values, this.group.keys.titleKey);\n\n            this._DOM.isLoading = false;\n\n            this._items = this.group.value;\n            this.EmptySearch(this._items, value);\n\n            // User has typed something now, results could be shown. We need to remove the \"is-initial-empty\" class.\n            this.IsInitialEmpty();\n            this.dropdown.Open();\n        }\n    }\n\n    /**\n     *\n     */\n    OnModelChange(value: string) {\n        this._completer = value;\n        this._highlight = value;\n\n        this._DOM.selected = null;\n\n        if (value.length === 0) {\n            this.ClearModel();\n\n            this.dropdown.Close('', true)\n        } else if (value.length > this.group.searchLength) {\n            this.CompareItemsAndSet(value);\n        }\n    }\n\n    /**\n     *\n     */\n    ClearModel() {\n        this._DOM.selected = null;\n        this._DOM.notFound = false;\n\n        this.cleared.emit(this.group.key);\n    }\n\n    /**\n     *\n     */\n    CompareItemsAndSet(value: string) {\n        const obj = {};\n        for (let key in this.group.value) {\n            if (ComparableAutoCompleteString(key).toLowerCase().indexOf(value.toLowerCase()) > -1) {\n                obj[key] = this.group.value[key]\n            }\n        }\n\n        this._items = obj;\n        this.EmptySearch(this._items, value);\n\n        // User has typed something now, results could be shown. We need to remove the \"is-initial-empty\" class.\n        this.IsInitialEmpty();\n        this.dropdown.Open();\n    }\n\n    /**\n     *\n     */\n    OnInputBlurred() {\n        if (!this.HasChosenValue()) {\n            /**\n             * Let component know completer input has been cleared -\n             * this function shows the list again, also resets children, if chosen.\n             */\n            this.OnModelChange('');\n        }\n    }\n\n    /**\n     *\n     */\n    OnHoverDropdownItem(item: AutocompleteItem | string) {\n        if (typeof item == 'string') {\n            this._DOM.placeholder = this._items[item];\n            return;\n        }\n        if (item == null) {\n            this._DOM.placeholder = null;\n            return;\n        }\n\n        this._DOM.placeholder = item;\n    }\n\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n\n    IsInitialEmpty() {\n        if (Object.keys(this._items).length === 0 && this._completer.length === 0) {\n            this._DOM.empty = true;\n            return;\n        }\n\n        this._DOM.empty = false;\n    }\n\n    /**\n     *\n     */\n    HasChosenValue(): boolean {\n        return this._DOM.selected !== null\n    }\n\n    /**\n     *\n     */\n    EmptySearch(obj: Object, query: string) {\n        if (Object.keys(obj).length > 0) {\n            this._DOM.notFound = false;\n            return\n        }\n\n        this._DOM.notFound = true;\n        this.noResult.emit({group: {key: this.group.key}, query: query})\n    }\n\n    /**\n     *\n     */\n    ClearValue() {\n        this._completer = '';\n        this._DOM.selected = null;\n\n        this.group.InitialValue();\n        this.IsInitialEmpty();\n        /**\n         *\n         */\n        this.selected.emit({group: {key: this.group.key}, item: null});\n    }\n}\n","import {\n    ChangeDetectorRef,\n    Component,\n    ElementRef,\n    EventEmitter,\n    Input,\n    OnInit,\n    Output,\n    QueryList,\n    SimpleChanges,\n    TemplateRef,\n    ViewChild,\n    ViewChildren\n} from '@angular/core';\nimport {AutocompleteGroup} from './classes/AutocompleteGroup';\nimport {SelectedAutocompleteItem} from './classes/typing';\nimport {CompleterComponent} from './completer/completer.component';\nimport {GroupNoResult, ReturnStringArrayByID} from './utils/utils';\nimport {Subject} from 'rxjs';\n\n@Component({\n    selector: 'ng-auto-complete',\n    template: `\n        <div #init style=\"display: none;\"><span class=\"after-view-init\"></span></div>\n        <ng-completer [ngClass]=\"classes\" *ngFor=\"let item of group\" (cleared)=\"InputCleared($event)\"\n                      (no-result)=\"NoResult($event)\"\n                      (selected)=\"ListenToSelected($event)\"\n                      [group]=\"item\"></ng-completer>\n    `,\n})\nexport class NgAutoCompleteComponent implements OnInit {\n    @ViewChildren(CompleterComponent) public completers: QueryList<CompleterComponent>;\n    @ViewChild('init') public init: ElementRef;\n\n    @Output() public selected: EventEmitter<SelectedAutocompleteItem> = new EventEmitter<SelectedAutocompleteItem>();\n    @Output('no-result') public noResult: EventEmitter<GroupNoResult> = new EventEmitter<GroupNoResult>();\n\n    @Input() public group: AutocompleteGroup[] = [];\n    @Input() public key: string = '';\n    @Input() public classes: string[] = [];\n\n    _viewHasBeenInit: boolean = false;\n    _viewInitSubject: Subject<boolean> = new Subject<boolean>();\n\n    constructor(private cdr: ChangeDetectorRef) {\n    }\n\n    ngOnChanges(changes: SimpleChanges) {\n\n    }\n\n    /**\n     *\n     */\n    ngOnInit() {\n    }\n\n    /**\n     *\n     */\n    ngAfterViewChecked() {\n        if (!this._viewHasBeenInit) {\n            let el = this.init.nativeElement.querySelector('.after-view-init');\n\n            if (window.getComputedStyle(el).length > 0) {\n                this._viewHasBeenInit = true;\n                this._viewInitSubject.next(true);\n            }\n        }\n    }\n\n    /**\n     *\n     */\n    ListenToSelected(selected: SelectedAutocompleteItem) {\n        this.selected.emit(selected);\n\n        /**\n         *\n         */\n        this.SetChildren(selected);\n    }\n\n    /**\n     *\n     */\n    NoResult(group: GroupNoResult) {\n        this.noResult.emit(group);\n    }\n\n    /**\n     *\n     */\n    InputCleared(key: string) {\n        this.group.forEach((group) => {\n            if (group.key === key || group.parent === key) {\n                this.ResetInput(group.key);\n            }\n        });\n\n        /**\n         * Items may have changed, need to te re-set list in completer components.\n         */\n        this.TriggerChange();\n    }\n\n    /**\n     *\n     */\n    SetChildren(selected: SelectedAutocompleteItem) {\n        this.group.forEach((item) => {\n\n            if (item.parent == selected.group.key) {\n                this.ResetInput(item.key);\n\n                /**\n                 *\n                 */\n                if (selected.item !== null && typeof selected.item.children !== 'undefined') {\n                    item.SetNewValue(selected.item.children, selected.group.keys.titleKey);\n                }\n            }\n        });\n\n        /**\n         * Items may have changed, need to te re-set list in completer components.\n         */\n        this.TriggerChange();\n    }\n\n    /**\n     *\n     */\n    TriggerChange() {\n        this.completers.forEach((completer) => {\n            completer.SetItems();\n        });\n    }\n\n    // =======================================================================//\n    // ! Utils                                                                //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    GetInput(key: string): CompleterComponent {\n        return this.completers.reduce((result, completer) => {\n            if (completer.group.key === key) {\n                result = completer;\n            }\n\n            return result;\n        }, <CompleterComponent>{});\n    }\n\n    /**\n     *\n     */\n    SubscribeInput(key: string, f: (completer: CompleterComponent) => void) {\n        if (this._viewHasBeenInit) {\n            let completer = this.GetInput(key);\n\n            /**\n             *\n             */\n            f(completer);\n            return;\n        }\n\n        this._viewInitSubject.subscribe((_bool) => {\n            let completer = this.GetInput(key);\n            setTimeout(() => {\n                f(completer);\n            });\n\n            this._viewInitSubject.unsubscribe();\n        });\n    }\n\n    /**\n     *\n     */\n    ResetInput(key: string) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.ClearValue();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    SetValues(key: string, values: { id?: string | number; [value: string]: any }[]) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.group.SetValues(values);\n\n                /**\n                 * Items may have changed, need to te re-set list in completer components.\n                 */\n                this.TriggerChange();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    SetTemplate(key: string, type: 'noResults' | 'placeholderValue' | 'dropdownValue', template: TemplateRef<any>) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.group[type] = template;\n\n                /**\n                 * Items may have changed, need to te re-set list in completer components.\n                 */\n                this.TriggerChange();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    SetAsync(key: string, promise: (str: string) => Promise<{ id: string | number; [value: string]: any }[]>) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.group.async = promise;\n\n                /**\n                 * Items may have changed, need to te re-set list in completer components.\n                 */\n                this.TriggerChange();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    SelectItem(key: string, id: string | number) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                Object.keys(completer._items).forEach((key) => {\n                    let f = `_id_${String(id)}`;\n                    let c = key.substring(key.indexOf(f), key.length);\n\n                    if (f === c) {\n                        completer.SelectItem(completer._items[key]);\n                    }\n                });\n\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    RemovableValues(key: string, ids: { id: string | number, [value: string]: any }[]) {\n        this.SubscribeInput(\n            key,\n            (completer) => {\n                completer.group.Removables(ReturnStringArrayByID(ids));\n\n                /**\n                 * Items may have changed, need to te re-set list in completer components.\n                 */\n                this.TriggerChange();\n            }\n        );\n    }\n\n    /**\n     *\n     */\n    ResetInputs() {\n        this.group.forEach((item) => {\n            this.ResetInput(item.key);\n        });\n    }\n\n    // =======================================================================//\n    // ! Static (utils)                                                       //\n    // =======================================================================//\n\n    /**\n     *\n     */\n    static FindCompleter(key: string, list: QueryList<NgAutoCompleteComponent>): NgAutoCompleteComponent {\n        const completer = list.filter((completer: NgAutoCompleteComponent) => {\n            return key === completer.key;\n        });\n\n        if (typeof completer[0] !== 'undefined') {\n            return completer[0];\n        }\n\n        return null;\n    }\n}\n","import {Pipe, PipeTransform} from \"@angular/core\";\n\n@Pipe({\n    name: 'highlight'\n})\nexport class HighlightPipe implements PipeTransform {\n    transform(text: string, search: string): string {\n        if (typeof search === 'undefined') {\n            return text\n        }\n\n        let pattern = search.replace(/[\\-\\[\\]\\/{}()*+?.\\\\^$|]/g, '\\\\$&');\n        pattern = pattern.split(' ').filter((t) => t.length > 0).join('|');\n\n        /**\n         *\n         */\n        return text.replace(new RegExp(pattern, 'gi'), (match) => `<span class=\"dropdown-item-highlight\">${match}</span>`);\n    }\n}","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'keys'\n})\nexport class KeyValuePipe implements PipeTransform {\n\n    transform(value: any, args?: any): any {\n        let keys = [];\n        for (let key in value) {\n            if (value.hasOwnProperty(key)) {\n                keys.push(key);\n            }\n        }\n\n        return keys;\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {HighlightPipe} from './highlight';\nimport {KeyValuePipe} from './key-value';\n\n@NgModule({\n    imports: [],\n    declarations: [HighlightPipe, KeyValuePipe],\n    exports: [HighlightPipe, KeyValuePipe],\n})\nexport class PipeModule {\n\n    static forRoot() {\n        return {\n            ngModule: PipeModule,\n            providers: [],\n        };\n    }\n}\n","import {NgModule} from '@angular/core';\nimport {NgAutoCompleteComponent} from './ng-auto-complete.component';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {CompleterComponent} from './completer/completer.component';\nimport {NgDropdownDirective} from './dropdown/ng-dropdown.directive';\nimport {PipeModule} from './pipes/pipes.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        PipeModule.forRoot()\n    ],\n    exports: [\n        NgAutoCompleteComponent,\n        CompleterComponent,\n    ],\n    declarations: [\n        NgAutoCompleteComponent,\n        CompleterComponent,\n        NgDropdownDirective\n    ]\n})\nexport class NgAutoCompleteModule {\n}\n","import { AutocompleteItem, SearchableAutoCompleteItems } from './AutocompleteItem';\nimport { TemplateRef } from '@angular/core';\n\nexport class AutocompleteGroup {\n    initialValue: { [value: string]: AutocompleteItem };\n\n    key: string;\n    keys: { titleKey: string, childrenKey: string | null };\n    value: { [value: string]: AutocompleteItem };\n    remove: string[];\n    placeholder: string;\n    parent: string;\n    completion: boolean;\n    searchLength: number;\n    async: (str: string) => Promise<{ id: string | number; [value: string]: any }[]> = null;\n\n    // Templates\n    noResults: TemplateRef<any>;\n    dropdownValue: TemplateRef<any>;\n    placeholderValue: TemplateRef<any>;\n\n    private removals: string[] = [];\n    private _copy: { [value: string]: AutocompleteItem };\n\n    constructor() {\n    }\n\n    /**\n     *\n     */\n    SetNewValue(value: { id: string | number; [value: string]: any }[], titleKey: string) {\n        const values = SearchableAutoCompleteItems(value, titleKey);\n        this.SetCopy(values);\n\n        /**\n         *\n         */\n        this.value = this.FilterRemovals(this.removals, values);\n    }\n\n    /**\n     *\n     */\n    Removables(ids: string[]) {\n        this.removals = ids;\n\n        /**\n         *\n         */\n        this.value = this.FilterRemovals(this.removals, this._copy);\n    }\n\n    /**\n     *\n     */\n    InitialValue() {\n        this.value = this.FilterRemovals(this.removals, this.initialValue);\n\n        /**\n         *\n         */\n        this.SetCopy(this.initialValue);\n    }\n\n    /**\n     *\n     */\n    SetCopy(values: { [value: string]: AutocompleteItem }) {\n        this._copy = Object.assign([], values);\n    }\n\n    /**\n     *\n     */\n    SetValues(value: { id?: string | number; [value: string]: any }[]) {\n        this.value = SearchableAutoCompleteItems(value, this.keys.titleKey, this.keys.childrenKey);\n\n        /**\n         *\n         */\n        this.initialValue = Object.assign({}, this.value);\n        this.SetCopy(Object.assign({}, this.value));\n    }\n\n    /**\n     *\n     */\n    FilterRemovals(removals: any[], value: { [value: string]: AutocompleteItem }): { [value: string]: AutocompleteItem } {\n        let filtered = Object.assign({}, value);\n\n        let key, keys = [];\n        for (key in filtered) {\n            if (filtered.hasOwnProperty(key)) {\n                removals.forEach((id) => {\n                    // Comparable string and ID\n                    let f = `_id_${String(id)}`;\n                    let c = key.substring(key.indexOf(f), key.length);\n\n                    if (f === c) {\n                        keys.push(key);\n                    }\n                })\n            }\n        }\n\n        keys.forEach((k) => {\n            delete filtered[k];\n        });\n\n        return filtered;\n    }\n}\n\n/**\n *\n */\nexport function CreateNewAutocompleteGroup<T>(placeholder: string, key: string, value: { id?: string | number; [value: string]: any }[], keys: { titleKey: string, childrenKey: string | null }, parent: string = '', completion: boolean = true, searchLength: number = 2): AutocompleteGroup {\n    const group = new AutocompleteGroup();\n\n    group.key = key;\n    group.keys = keys;\n    group.placeholder = placeholder;\n    group.parent = parent;\n    group.completion = completion;\n    group.searchLength = searchLength;\n\n    /**\n     * Initial value needed, if we empty search box or want to clear it, it needs to be reset.\n     * Setting copy, used if user wants to remove values (by id.). This _ list gets filtered.\n     */\n    group.SetValues(value);\n\n    return group;\n}\n"]}